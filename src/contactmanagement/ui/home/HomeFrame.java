package contactmanagement.ui.home;

import contactmanagement.auth.Session;
import contactmanagement.model.Contact;
import contactmanagement.utilities.DialogBox;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import contactmanagement.viewmodel.ViewModel;

public class HomeFrame extends javax.swing.JFrame {

    private HomeFrameViewModel mainFrameViewModel = null;
    private Session loginSession;
    private boolean firstRun = true;
    private Contact selectedContact = new Contact();
    private boolean stateEdit = false;

    /**
     * Creates new form MainFrame
     *
     * @param loginSession
     */
    public HomeFrame(Session loginSession) {
        this.loginSession = loginSession;
        this.setVisible(true);
        provideViewModel();
        initComponents();
        initShellActions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPanelContactTable = new javax.swing.JScrollPane();
        tableContact = new javax.swing.JTable();
        lblName = new javax.swing.JLabel();
        fieldNama = new javax.swing.JTextField();
        lblNoTelp = new javax.swing.JLabel();
        btnAddEdit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblSearch = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        fieldNoTelp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistem Pendataan Kontak Pelanggan");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        tableContact.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nama", "NoTelp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPanelContactTable.setViewportView(tableContact);

        lblName.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblName.setLabelFor(fieldNama);
        lblName.setText("Nama");
        lblName.setToolTipText("");

        fieldNama.setBackground(new java.awt.Color(224, 224, 224));

        lblNoTelp.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblNoTelp.setLabelFor(fieldNama);
        lblNoTelp.setText("No. Telepon");
        lblNoTelp.setToolTipText("");

        btnAddEdit.setBackground(new java.awt.Color(40, 155, 162));
        btnAddEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnAddEdit.setText("Tambah");
        btnAddEdit.setBorder(null);
        btnAddEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEditActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(246, 119, 74));
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.setBorder(null);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(217, 84, 89));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Hapus");
        btnDelete.setActionCommand("");
        btnDelete.setBorder(null);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblSearch.setLabelFor(tfSearch);
        lblSearch.setText("Cari");

        tfSearch.setBackground(new java.awt.Color(224, 224, 224));
        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });

        fieldNoTelp.setBackground(new java.awt.Color(224, 224, 224));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scrollPanelContactTable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fieldNoTelp)
                            .addComponent(btnAddEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNoTelp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addComponent(btnReset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fieldNama)))
                    .addComponent(tfSearch))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNoTelp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                    .addComponent(scrollPanelContactTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(711, 383));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (selectedContact.id != null && !selectedContact.id.isEmpty()) {
            int response = DialogBox.showOptionDialog(
                "Anda yakin?",
                "Data kontak ini akan dihapus!",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);

            if (response == JOptionPane.YES_OPTION) {
                mainFrameViewModel.deleteContact(selectedContact);
                firstState();
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        firstState();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnAddEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEditActionPerformed
        boolean isFormError = validateContactFormError();
        Contact contact = new Contact();
        contact.setName(fieldNama.getText());
        contact.setpn(fieldNoTelp.getText());

        if (!stateEdit && !isFormError) { // State Add
            mainFrameViewModel.addContact(contact);
            firstState();
        } else if (!isFormError) { // State Update
            contact.setId(selectedContact.id);
            mainFrameViewModel.updateContact(contact);
            firstState();
        }
    }//GEN-LAST:event_btnAddEditActionPerformed

    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSearchActionPerformed

    private void provideViewModel() {
        mainFrameViewModel = new HomeFrameViewModel();
    }

    private void initShellActions() {
        tableContact.getSelectionModel().addListSelectionListener((ListSelectionEvent lse) -> {
            if (tableContact.getSelectedRow() > -1) {
                String id = tableContact.getValueAt(tableContact.getSelectedRow(), 0).toString();
                String name = tableContact.getValueAt(tableContact.getSelectedRow(), 1).toString();
                String pn = tableContact.getValueAt(tableContact.getSelectedRow(), 2).toString();

                selectedContact.setId(id);
                selectedContact.setName(name);
                selectedContact.setpn(pn);

                fillContactForm(selectedContact);
                stateEdit();
            }
        });

        tfSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                performSearchContact();
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                performSearchContact();
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                performSearchContact();
            }
        });

        mainFrameViewModel.observeConnection(new ViewModel() {
            @Override
            public void connectionStatus(boolean status) {
                if (!status) {
                    showDatabaseErrorDialog();
                } else if (status && firstRun) { // First application run
                    runShell();
                    firstRun = false;
                }
            }
        });
    }

    private void runShell() {
        getAndFillContactTable();
    }

    private void firstState() {
        tableContact.clearSelection(); // Clear selected table row and column
        selectedContact = new Contact();

        btnAddEdit.setText("Tambah");
        tfSearch.setText("");
        fieldNama.setText("");
        fieldNoTelp.setText("");
        stateEdit = false;

        getAndFillContactTable();
    }

    private void stateEdit() {
        stateEdit = true;
        btnAddEdit.setText("Ubah");
    }

    private void fillContactForm(Contact contact) {
        fieldNama.setText(contact.name);
        fieldNoTelp.setText(contact.pn);
    }

    private void getAndFillContactTable() {
        ArrayList<Contact> contacts = mainFrameViewModel.getContacts();

        cleanContactTableRows();
        for (int i = 0; i < contacts.size(); i++) {
            insertContactToTable(contacts.get(i));
        }
    }

    private void insertContactToTable(Contact contact) {
        DefaultTableModel tblModel = (DefaultTableModel) tableContact.getModel();
        String rowData[] = {contact.id, contact.name, contact.pn};
        tblModel.addRow(rowData);
    }

    private void insertContactsToTable(ArrayList<Contact> contacts) {
        cleanContactTableRows();
        for (int i = 0; i < contacts.size(); i++) {
            insertContactToTable(contacts.get(i));
        }
    }

    private void cleanContactTableRows() {
        DefaultTableModel tblModel = (DefaultTableModel) tableContact.getModel();
        tableContact.clearSelection(); // Clear selected table row and column

        while (tblModel.getRowCount() > 0) {
            tblModel.removeRow(0);
        }
    }

    private void performSearchContact() {
        String keyword = tfSearch.getText();
        ArrayList<Contact> contacts = mainFrameViewModel.searchContacts(keyword);
        cleanContactTableRows();
        insertContactsToTable(contacts);
    }

    private boolean validateContactFormError() {
        boolean isError = false;

        if (fieldNama.getText().isEmpty()) {
            isError = true;
            DialogBox.showMessageDialog("Silahkan isi nama !");
        } else if (fieldNoTelp.getText().isEmpty()) {
            isError = true;
            DialogBox.showMessageDialog("Silahkan isi alamat !");
        }

        return isError;
    }

    private void showDatabaseErrorDialog() {
        int response = DialogBox.showOptionDialog(
                "Error",
                "Database Gagal Terhubung !\nIngin Menyambungkannya Kembali ?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.ERROR_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            mainFrameViewModel.connectDB();
            runShell();
        } else {
            System.exit(0); // Exit Programs
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEdit;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JTextField fieldNama;
    private javax.swing.JTextField fieldNoTelp;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNoTelp;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JScrollPane scrollPanelContactTable;
    private javax.swing.JTable tableContact;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
